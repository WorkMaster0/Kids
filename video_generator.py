import os
import requests
from moviepy.editor import ImageClip, AudioFileClip, CompositeVideoClip, TextClip
from moviepy.config import change_settings
from gtts import gTTS
from PIL import Image, ImageDraw, ImageFont
import numpy as np

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è FFmpeg
change_settings({"FFMPEG_BINARY": "/usr/bin/ffmpeg"})

def generate_story(topic: str) -> str:
    """–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Ç–µ–∫—Å—Ç—É —ñ—Å—Ç–æ—Ä—ñ—ó (—Å–ø—Ä–æ—â–µ–Ω–∞ –≤–µ—Ä—Å—ñ—è)"""
    stories = {
        "–∞–Ω—ñ–º–∞—Ü—ñ—è": "–ü—Ä–∏–≥–æ–¥–∏ –≤–µ—Å–µ–ª–∏—Ö –∑–≤—ñ—Ä—è—Ç–æ–∫ —É –ª—ñ—Å—ñ! üêªüê∞üå≥",
        "–∫–∞–∑–∫–∞": "–ñ–∏–ª–∏-–±—É–ª–∏ —Ç—Ä–∏ –ø–æ—Ä–æ—Å—è—Ç–∫–∞. –í–æ–Ω–∏ –±—É–¥—É–≤–∞–ª–∏ –±—É–¥–∏–Ω–∫–∏... üê∑üê∑üê∑",
        "–Ω–∞–≤—á–∞–Ω–Ω—è": "–í—á–∏–º–æ –∫–æ–ª—å–æ—Ä–∏ –≤–µ—Å–µ–ª–æ! –ß–µ—Ä–≤–æ–Ω–∏–π, —Å–∏–Ω—ñ–π, –∑–µ–ª–µ–Ω–∏–π... üåà",
        "–ø—ñ—Å–Ω—è": "–õ–∞-–ª–∞-–ª–∞, –≤–µ—Å–µ–ª–∞ –ø—ñ—Å–µ–Ω—å–∫–∞ –¥–ª—è –¥—ñ—Ç–æ—á–æ–∫! üéµ"
    }
    
    return stories.get(topic.lower(), f"–¶—ñ–∫–∞–≤–∞ —ñ—Å—Ç–æ—Ä—ñ—è –ø—Ä–æ {topic}! üìö")

def generate_image(scene_description: str, filename: str):
    """–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è (—Å–ø—Ä–æ—â–µ–Ω–∞ –≤–µ—Ä—Å—ñ—è)"""
    # –¢—É—Ç –±—É–¥–µ —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∑ Stable Diffusion/DALL-E
    # –ó–∞—Ä–∞–∑ —Å—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–æ—Å—Ç–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
    width, height = 1024, 768
    img = Image.new('RGB', (width, height), color='lightblue')
    draw = ImageDraw.Draw(img)
    
    # –ü—Ä–æ—Å—Ç–∞ –≥—Ä–∞—Ñ—ñ–∫–∞
    draw.rectangle([100, 100, 300, 300], fill='yellow', outline='orange')
    draw.ellipse([600, 200, 800, 400], fill='green')
    
    img.save(filename)
    return filename

def generate_audio(text: str, filename: str):
    """–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∞—É–¥—ñ–æ (—Ç–µ–∫—Å—Ç —É –º–æ–≤—É)"""
    tts = gTTS(text=text, lang='uk', slow=False)
    tts.save(filename)
    return filename

async def generate_children_video(topic: str, user_id: str):
    """–û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –≤—ñ–¥–µ–æ"""
    try:
        # –°—Ç–≤–æ—Ä—é—î–º–æ –ø–∞–ø–∫—É –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        user_dir = f"assets/user_{user_id}"
        os.makedirs(user_dir, exist_ok=True)
        
        # –ì–µ–Ω–µ—Ä—É—î–º–æ –∫–æ–Ω—Ç–µ–Ω—Ç
        story_text = generate_story(topic)
        audio_path = f"{user_dir}/audio.mp3"
        video_path = f"{user_dir}/video.mp4"
        
        # –ì–µ–Ω–µ—Ä—É—î–º–æ –∞—É–¥—ñ–æ
        generate_audio(story_text, audio_path)
        
        # –ì–µ–Ω–µ—Ä—É—î–º–æ –∫—ñ–ª—å–∫–∞ —Å—Ü–µ–Ω
        clips = []
        audio_clip = AudioFileClip(audio_path)
        duration = audio_clip.duration
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–æ—Å—Ç—ñ —Å—Ü–µ–Ω–∏
        for i in range(3):
            scene_path = f"{user_dir}/scene_{i}.png"
            generate_image(f"–°—Ü–µ–Ω–∞ {i} –¥–ª—è {topic}", scene_path)
            
            image_clip = ImageClip(scene_path).set_duration(duration/3)
            clips.append(image_clip)
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ –≤—ñ–¥–µ–æ
        final_clip = CompositeVideoClip(clips).set_audio(audio_clip)
        final_clip.write_videofile(
            video_path,
            fps=24,
            codec='libx264',
            audio_codec='aac'
        )
        
        # –û—á–∏—â–∞—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤—ñ —Ñ–∞–π–ª–∏
        for file in os.listdir(user_dir):
            if file != "video.mp4":
                os.remove(f"{user_dir}/{file}")
        
        return video_path
        
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –≤—ñ–¥–µ–æ: {e}")
        return None